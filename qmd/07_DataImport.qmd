---
title: "07: Data Import with Tidyverse"
author: "Juan Caballero"
---

```{r, child="_setup.qmd"}
```

## Before we begin

-   If you are not using Workbench, please install the following packages:

```{r}
#| eval: false
#| echo: true
install.packages("tidyverse")
```

-   The command will install a large set of packages that are designed to work together, including ggplot2.

## Credit

-   This presentation is heavily influenced by Rafael Irizarry's book [Introduction to Data Science](https://rafalab.dfci.harvard.edu/dsbook) and his corresponding course on EdX.
-   It also draws on material from previous MPI R courses given by Devon Ryan and David Koppstein.
-   Updated with the Software Carpentry course "*Introduction to data analysis with R and Bioconductor*"

![](images/Rafael_Irizarry.jpg){.absolute bottom="25" left="100" width="250"} 
![](images/Devon_Ryan.jpeg){.absolute bottom="25" left="450" width="250"}
![](images/David_Koppstein.jpg){.absolute bottom="25" left="800" width="250"}

::: footer
<https://www.edx.org/bio/rafael-irizarry>
<https://carpentries-incubator.github.io/bioc-intro/30-dplyr.html>
:::

## Following along

- For each module, please create a separate R script and type in and execute the commands that are to follow along. 

- The code from some slides depends on the previous slides! 

- You can execute each line individually using Command-Enter on Mac, alt-Enter on Workbench. 

## Data Import in the Tidyverse

The first step for any analysis is importing the data into a machine-readable format. The tidyverse offers the `readr::` and `readxl::` packages.

Note:

- most data can be easy to import when it's properly formatted in a text format

- MS Excel files can be read and/or write but **should be avoided**

## Formats {auto-animate="true"}

CSV (*comma separated values*)

```
label1,label2,label3,"label num 4"<NL>
value1,value2,value3,"value num 4"<NL>
```

```
sample,sex,age,treatment,response
A001,M,8,KO,5200
A002,M,4,WT,4430
A003,F,4,KO,344
B001,F,6,WT,2328
```
## Formats {auto-animate="true"}

TSV (*tab separated values*)

```
label1<TAB>label2<TAB>label3<TAB>"label num 4"<NL>
value1<TAB>value2<TAB>value3<TAB>"value num 4"<NL>
```

```
sample\tsex\tage\ttreatment\tresponse
A001\tM\t8\tKO\t5200
A002\tM\t4\tWT\t4430
A003\tF\t4\tKO\t344
B001\tF\t6t\tWT\t2328
```
## Formats {auto-animate="true"}

DELIM (*char separated values*)

```
label1;label2;label3;"label num 4"$value1;value2;value3;"value num 4"//
```

```
sample;sex;age;treatment;response$A001;M;8;KO;5200$A002;M;4;WT;4430$A003;F;4;KO;344$B001;F;6;WT;2328//
```


## `readr::` {auto-animate="true"}

-   `readr::` is the Tidyverse library for reading data from text formats.
-   `read_csv()`, `read_tsv()`, `read_table()`, and `read_delim()` are some of the functions provided
-   `read_csv2()` allows for reading of European-style CSV files (e.g. using `;`)

::: footer
<https://readr.tidyverse.org/>
:::

## `readr::` in action {auto-animate="true"}

```{r}
#| echo: true

# read file in CSV format, file is in working directory
dat = read_csv("file.csv")

# read file using full path, file is anywhere in the filesystem
dat = read_csv("/full/path/to/file.csv")

# read file using URL, file is anywhere in the internet
dat = read_csv("https://server.com/region/file.csv")
```

## `readr::` in action {auto-animate="true"}

```{r}
#| echo: true
rnaseq_file = "https://raw.githubusercontent.com/maxplanck-ie/Rintro/2024.04/qmd/data/rnaseq.csv"

rna = read_csv(rnaseq_file)

rna 
```

What is this "*rna*"?

## What is a tibble?

-   Tibbles are like data frames, but more modern, and are built for the Tidyverse
-   The interface is the same, using e.g. `$` for columns
-   Tibbles can contain more complex objects than just strings, numbers, or booleans, like lists or functions
-   Tibbles can be grouped
-   You can see the types of each column in a tibble

## Quick exercise {auto-animate="true"}

Explore the RNAseq data as a tibble.

```{r}
#| echo: true
head(rna)
```

## Quick exercise {auto-animate="true"}

Explore the RNAseq data as a tibble.

```{r}
#| echo: true
tail(rna)
```

## Quick exercise {auto-animate="true"}

Explore the RNAseq data as a tibble.

```{r}
#| echo: true
dim(rna)
```

## `readxl::` {auto-animate="true"}

-   `readxl::` is the Tidyverse library for reading data from Excel formats.
-   `read_excel()`, `read_xls()` and `read_xlsx()` are some of the functions provided
-   The `excel_sheets()` function yields the names of the sheets in the Excel file. These names are passed to the `sheet` argument for the **readxl** functions
-   The `read_lines()` function shows the first few lines of a file in R.

## `readxl::` in action {auto-animate="true"}

```{r}
#| echo: true
full_url = "https://github.com/maxplanck-ie/Rintro/raw/2024.04/qmd/data/2010_bigfive_regents.xls"

download.file(url=full_url, destfile="2010_bigfive_regents.xls")

excel_sheets("2010_bigfive_regents.xls")
```

`excel_sheets()` lists the sheets in the Excel file

## `readxl::` in action {auto-animate="true"}

Loading the data in "Sheet1"

```{r}
#| echo: true
sheet_one = read_xls("2010_bigfive_regents.xls", sheet = "Sheet1")

sheet_one
```

## `readxl::` {auto-animate="true"}

- `read_xls()` is for xls files, `read_xlsx` for XML-based xlsx files
- you can use `read_excel()` if you are unsure of the format

## Any questions?

We will next talk about how to manipulate data in data frames/tibbles using the Tidyverse.
